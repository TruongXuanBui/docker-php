#!/bin/sh
set -e

cd "$(php -r 'echo ini_get("extension_dir");')"

usage() {
	echo "usage: $0 [options] module-name [module-name ...]"
	echo "   ie: $0 gd mysqli"
	echo "       $0 pdo pdo_mysql"
	echo "       $0 --ini-name 0-apc.ini apcu apc"
	echo
	echo 'Possible values for module-name:'
	echo $(find -maxdepth 1 -type f -name '*.so' -exec basename '{}' ';' | sort)
}

opts="$(getopt -o 'h?' --long 'help,ini-name:' -- "$@" || { usage >&2 && false; })"
eval set -- "$opts"

iniName=
while true; do
	flag="$1"
	shift
	case "$flag" in
		--help|-h|'-?') usage && exit 0 ;;
		--ini-name) iniName="$1" && shift ;;
		--) break ;;
		*)
			{
				echo "error: unknown flag: $flag"
				usage
			} >&2
			exit 1
			;;
	esac
done

modules=
for module; do
	if [ -z "$module" ]; then
		continue
	fi
	if [ -f "$module.so" ] && ! [ -f "$module" ]; then
		# allow ".so" to be optional
		module="$module.so"
	fi
	if ! [ -f "$module" ]; then
		echo >&2 "error: $(readlink -f "$module") does not exist"
		echo >&2
		usage >&2
		exit 1
	fi
	modules="$modules $module"
done

if [ -z "$modules" ]; then
	usage >&2
	exit 1
fi

for module in $modules; do
	ext="$(basename "$module")"
	ext="${ext%.*}"

	ini="/usr/local/etc/php/conf.d/${iniName:-"docker-php-ext-$ext.ini"}"
	if ! [ -f "$ini" ]; then
		echo >&2
		echo >&2 "warning: $ini ($module) is not existed!"
		echo >&2
		continue
    else
		mv "$ini" "$ini.disable"
	fi

    if ! php -r 'exit(extension_loaded("'"$ext"'") ? 1 : 0);'; then
		echo >&2
		echo >&2 "warning: $ext ($module) is still enabled!"
		echo >&2
		continue
	fi
done
